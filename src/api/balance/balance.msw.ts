/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Social Learning Platform API
 * The Social Learning Platform API description
 * OpenAPI spec version: 1.0
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';

import type {
  BalanceDto,
  TransactionHistoryDto
} from '../../model';


export const getApiGetBalanceResponseMock = (overrideResponse: Partial< BalanceDto > = {}): BalanceDto => ({userId: faker.string.alpha(20), balance: faker.number.int({min: undefined, max: undefined}), creditChat: faker.number.int({min: undefined, max: undefined}), ...overrideResponse})

export const getApiGetTransactionHistoryResponseMock = (): TransactionHistoryDto[] => (Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({id: faker.string.alpha(20), userId: faker.string.alpha(20), amount: faker.number.int({min: undefined, max: undefined}), currency: faker.string.alpha(20), description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), createdAt: `${faker.date.past().toISOString().split('.')[0]}Z`})))


export const getApiGetBalanceMockHandler = (overrideResponse?: BalanceDto | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<BalanceDto> | BalanceDto)) => {
  return http.get('*/balance', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getApiGetBalanceResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getApiGetTransactionHistoryMockHandler = (overrideResponse?: TransactionHistoryDto[] | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<TransactionHistoryDto[]> | TransactionHistoryDto[])) => {
  return http.get('*/balance/history', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getApiGetTransactionHistoryResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getBalanceMock = () => [
  getApiGetBalanceMockHandler(),
  getApiGetTransactionHistoryMockHandler()
]
